name: Analyze SonarCloud

on:
  push:
    branches:
      - dev
#  pull_request:
#    branches: [ "dev" ]
#    #    branches: [ "rel/*" ]
#    types: [ opened, synchronize, reopened ]

jobs:
  build:
    name: SonarCloud Analyze JOB
    runs-on: windows-latest

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_SONAR_USER_SECRET }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"hsn-soft_sonar-solution" /o:"hsn-soft" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths=TestResults/*.trx /d:sonar.cs.dotcover.reportsPaths="AppCoverageReport.html" /d:sonar.coverage.exclusions="**Program*.cs" /d:sonar.verbose=true /d:sonar.sourceEncoding=UTF-8
          dotnet restore
          dotnet build --no-restore --configuration release
          dotnet test --collect:"Code Coverage" --configuration release -r ./TestResults --logger "trx;LogFileName=testoutput.trx"
          # dotnet dotcover test "./SnrTests/SnrTests.csproj" --configuration release --dcReportType=HTML --dcOutput="AppCoverageReport.html" -r ./TestResults --logger "trx;LogFileName=testoutput.trx"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          
